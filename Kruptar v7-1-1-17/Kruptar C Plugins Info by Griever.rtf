{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe1041\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f11\fbidi \fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f34\fbidi \froman\fcharset1\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\f39\fbidi \fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f40\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f41\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f43\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f44\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f45\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f46\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f47\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f48\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f50\fbidi \fswiss\fcharset238\fprq2 Arial CE;}{\f51\fbidi \fswiss\fcharset204\fprq2 Arial Cyr;}
{\f53\fbidi \fswiss\fcharset161\fprq2 Arial Greek;}{\f54\fbidi \fswiss\fcharset162\fprq2 Arial Tur;}{\f55\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f56\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}
{\f57\fbidi \fswiss\fcharset186\fprq2 Arial Baltic;}{\f58\fbidi \fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f152\fbidi \fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f150\fbidi \fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f151\fbidi \fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f153\fbidi \fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f154\fbidi \fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f157\fbidi \fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f410\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\f411\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}
{\f413\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\f414\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\f417\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\f418\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}
{\f432\fbidi \fmodern\fcharset0\fprq1 @MS Mincho Western;}{\f430\fbidi \fmodern\fcharset238\fprq1 @MS Mincho CE;}{\f431\fbidi \fmodern\fcharset204\fprq1 @MS Mincho Cyr;}{\f433\fbidi \fmodern\fcharset161\fprq1 @MS Mincho Greek;}
{\f434\fbidi \fmodern\fcharset162\fprq1 @MS Mincho Tur;}{\f437\fbidi \fmodern\fcharset186\fprq1 @MS Mincho Baltic;}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31520\fbidi \fmodern\fcharset0\fprq1 MS Gothic Western{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}
{\fdbmajor\f31518\fbidi \fmodern\fcharset238\fprq1 MS Gothic CE{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}{\fdbmajor\f31519\fbidi \fmodern\fcharset204\fprq1 MS Gothic Cyr{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}
{\fdbmajor\f31521\fbidi \fmodern\fcharset161\fprq1 MS Gothic Greek{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}{\fdbmajor\f31522\fbidi \fmodern\fcharset162\fprq1 MS Gothic Tur{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}
{\fdbmajor\f31525\fbidi \fmodern\fcharset186\fprq1 MS Gothic Baltic{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}
{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}
{\fhimajor\f31536\fbidi \froman\fcharset163\fprq2 Cambria (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31560\fbidi \fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\fdbminor\f31558\fbidi \fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\fdbminor\f31559\fbidi \fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\fdbminor\f31561\fbidi \fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\fdbminor\f31562\fbidi \fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\fdbminor\f31565\fbidi \fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\*\defchp 
\fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1041\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1041 \snext0 \sqformat \spriority0 Normal;}
{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1041\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1041 \snext11 \ssemihidden \sunhideused 
Normal Table;}{\*\cs15 \additive \ul\cf2 \ssemihidden \sunhideused \styrsid13050449 Hyperlink;}}{\*\rsidtbl \rsid11668938\rsid13050449\rsid15341362\rsid15887170}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1
\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\author Desktop}{\operator Desktop}{\creatim\yr2013\mo6\dy6\hr17\min59}{\revtim\yr2013\mo6\dy6\hr17\min59}{\version2}{\edmins0}{\nofpages6}{\nofwords2235}{\nofchars12745}{\nofcharsws14951}{\vern49247}}
{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot13050449 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1041\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1041 {
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11668938 \hich\af1\dbch\af31505\loch\f1 Instructions for Kruptar}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13050449 \hich\af1\dbch\af31505\loch\f1  Plugins Coding}{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid11668938 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid13050449 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13050449 \hich\af1\dbch\af31505\loch\f1 By Griever
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13050449 
\par 
\par }{\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13050449 \hich\af31506\dbch\af31505\loch\f31506 [o2.o6.2o13] }{\field\fldedit{\*\fldinst {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13050449 \hich\af31506\dbch\af31505\loch\f31506  
\hich\af31506\dbch\af31505\loch\f31506 HYPERLINK "http://griever.magicteam.net/doc/?doc=Kruptar_Plugins"\hich\af31506\dbch\af31505\loch\f31506  }}{\fldrslt {\rtlch\fcs1 \af31507 \ltrch\fcs0 \cs15\ul\cf2\insrsid13050449 
\hich\af31506\dbch\af31505\loch\f31506 Kruptar plugins coding}}}\sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13050449 \hich\af31506\dbch\af31505\loch\f31506  [MiSC]\line ============================================
\line Document describes plugin creation for Kruptar (text dumping/insertion utility). Unlike my }{\field\fldedit{\*\fldinst {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13050449 \hich\af31506\dbch\af31505\loch\f31506  \hich\af31506\dbch\af31505\loch\f31506 
HYPERLINK "http://magicteam.net/?page=documents&show=%D0%9D%D0%B0%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B5%20%D0%BF%D0%BB%D0%B0%D0%B3%D0%B8%D0%BD%D0%BE%D0%B2%20%D0%B4%D0%BB%D1%8F%20Kruptar%207"\hich\af31506\dbch\af31505\loch\f31506  }}{\fldrslt {
\rtlch\fcs1 \af31507 \ltrch\fcs0 \cs15\ul\cf2\insrsid13050449 \hich\af31506\dbch\af31505\loch\f31506 previous document}}}\sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid13050449 \hich\af31506\dbch\af31505\loch\f31506 
, here I will use C language and MinGW f\hich\af31506\dbch\af31505\loch\f31506 or compilation. Article is aimed at experienced reader.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13050449 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11668938 
\par \hich\af1\dbch\af31505\loch\f1 1. Introduction.
\par \hich\af1\dbch\af31505\loch\f1 This manual documents how to use Kruptar (current version 7.1.1.17), and describes principles of writing plugins for that tool (focused mainly on C language).
\par \hich\af1\dbch\af31505\loch\f1 
Kruptar - is a tool for extracting and inserting text, widely used in romhacking and fan translation. Main purpose is to extract, edit, insert text and automatically recalculate pointers in one application, which is easily extendable by plugins for any co
\hich\af1\dbch\af31505\loch\f1 m\hich\af1\dbch\af31505\loch\f1 pression support. Kruptar also supports DTE/MTE schemes natively.
\par \hich\af1\dbch\af31505\loch\f1 By analogy, this is like Atlas and Cartographer in one nice GUI with extended pointers schemes and full plugins support.
\par \hich\af1\dbch\af31505\loch\f1 Written by Djinn a.k.a. Kusharami, latest version can be found at Mag\hich\af1\dbch\af31505\loch\f1 
icteam - Russian fan translation group. Hereinafter I will sometimes refer to Russian websites and at your will, please use online translation services.
\par 
\par \hich\af1\dbch\af31505\loch\f1 2. Kruptar options.
\par \hich\af1\dbch\af31505\loch\f1 First things first, Kruptar has great GUI, which is self-explanatory. Here I will \hich\af1\dbch\af31505\loch\f1 clarify a few not so obvious things in short.
\par 
\par \hich\af1\dbch\af31505\loch\f1 Project creation is straightforward: you specify source/destination ROMs and tables, create group, specify places in ROM, which can be used for text storage, add list of pointers, by choosing pointer scheme, o
\hich\af1\dbch\af31505\loch\f1 ptions and pointer table offsets. Right after that, Kruptar extracts string corresponding to each pointer and you can save project file.
\par \hich\af1\dbch\af31505\loch\f1 Kruptar stores its project in *.kpx file, which is zip archive. Inside you will find all tables, which you have previou\hich\af1\dbch\af31505\loch\f1 
sly loaded in project, changed script in *.txt and *.kdt - binary file, which stores group/list names, offsets, options etc.
\par \hich\af1\dbch\af31505\loch\f1 After editing strings you, can press Recalculate and Insert button for text insertion.
\par \hich\af1\dbch\af31505\loch\f1 And now, the options:
\par \hich\af1\dbch\af31505\loch\f1 All numerical options \hich\af1\dbch\af31505\loch\f1 can have 'h' before the value, for assigning it as hexadecimal.
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 kpCodePage: ??? 
\par \tab \hich\af1\dbch\af31505\loch\f1 Specifies code page, Kruptar will use for your table files and text.
\par \hich\af1\dbch\af31505\loch\f1 kpFlags:
\par \tab \hich\af1\dbch\af31505\loch\f1 Value 0-3 (2 significant bits). 
\par \tab \hich\af1\dbch\af31505\loch\f1 Set low bit - do not display string terminator in Kruptar. \hich\af1\dbch\af31505\loch\f1 Script will
\par \tab \hich\af1\dbch\af31505\loch\f1 look more straight, and CLRF code will be inserted as usual.
\par \tab \hich\af1\dbch\af31505\loch\f1 Set high bit - do not delete 3 last symbols in the end of the entry.
\par \tab \hich\af1\dbch\af31505\loch\f1 If you have dictionary group all entries will have terminator as last
\par \tab \hich\af1\dbch\af31505\loch\f1 3 symbols (i.e. '/00'). By default, this\hich\af1\dbch\af31505\loch\f1  symbols are deleted by Kruptar,
\par \tab \hich\af1\dbch\af31505\loch\f1 and you can discard that by this option.
\par 
\par \hich\af1\dbch\af31505\loch\f1 Tables: 
\par \tab \hich\af1\dbch\af31505\loch\f1 You can load a table from separate file. CLRF codes should not have 
\par \tab \hich\af1\dbch\af31505\loch\f1 any '=' signs and string terminators should go after special word 'ends'. 
\par \tab \hich\af1\dbch\af31505\loch\f1 For example:
\par \tab \hich\af1\dbch\af31505\loch\f1 41=A
\par \tab \hich\af1\dbch\af31505\loch\f1 42=B
\par \tab \hich\af1\dbch\af31505\loch\f1 43=C
\par \tab \hich\af1\dbch\af31505\loch\f1 44=D
\par \tab \hich\af1\dbch\af31505\loch\f1 45=E
\par \tab \hich\af1\dbch\af31505\loch\f1 46=F
\par \tab \hich\af1\dbch\af31505\loch\f1 FF
\par \tab \hich\af1\dbch\af31505\loch\f1 ends
\par \tab 00
\par \hich\af1\dbch\af31505\loch\f1 grPlugin:
\par \tab \hich\af1\dbch\af31505\loch\f1 Specifies plugin for that separate text group
\par \hich\af1\dbch\af31505\loch\f1 grIsDictionary:
\par \tab \hich\af1\dbch\af31505\loch\f1 Makes that group dictionary. That affects some display features (affected 
\par \tab \hich\af1\dbch\af31505\loch\f1 by kpFlags = 2) and some dictionary options become available.
\par \hich\af1\dbch\af31505\loch\f1 ptDic\hich\af1\dbch\af31505\loch\f1 tionary:
\par \tab \hich\af1\dbch\af31505\loch\f1 Specifies dictionary group for DTE/MTE scripts
\par \hich\af1\dbch\af31505\loch\f1 ptPointerSize:
\par \tab \hich\af1\dbch\af31505\loch\f1 Size of pointer in bytes. Can be 0 for scripts without pointers, just specify 
\par \tab \hich\af1\dbch\af31505\loch\f1 first and last strings offsets during 'Add Pointers'
\par \hich\af1\dbch\af31505\loch\f1 ptReference:
\par \tab \hich\af1\dbch\af31505\loch\f1 stringOffset = ptReference + pointer\hich\af1\dbch\af31505\loch\f1 Value
\par \hich\af1\dbch\af31505\loch\f1 ptInterval:
\par \tab \hich\af1\dbch\af31505\loch\f1 Space in bytes between two separate pointers in pointer table.
\par \hich\af1\dbch\af31505\loch\f1 ptAlignment:
\par \tab \hich\af1\dbch\af31505\loch\f1 String offset force-alignment. This affects pointer value, of course.
\par \hich\af1\dbch\af31505\loch\f1 ptShiftLeft:
\par \tab \hich\af1\dbch\af31505\loch\f1 Pointer[i].value <<= ptShiftLeft; During extraction.
\par \hich\af1\dbch\af31505\loch\f1 ptCharSize:
\par \tab \hich\af1\dbch\af31505\loch\f1 Specifies character size in original encoding for proper extraction.
\par \hich\af1\dbch\af31505\loch\f1 ptStringLength:
\par \tab \hich\af1\dbch\af31505\loch\f1 Length of fixed-length strings. If length is 0, Kruptar searches for 
\par \tab \hich\af1\dbch\af31505\loch\f1 string terminators. If both ptStringLength and ptPointerSize are zeroed, 
\par \tab \hich\af1\dbch\af31505\loch\f1 just specify ROM's text \hich\af1\dbch\af31505\loch\f1 block first and last bytes offsets during 'Add Pointers'
\par \hich\af1\dbch\af31505\loch\f1 ptBIG_ENDIAN:
\par \tab \hich\af1\dbch\af31505\loch\f1 Pointer's endianness
\par \hich\af1\dbch\af31505\loch\f1 ptSplittedPtrs:
\par \tab \hich\af1\dbch\af31505\loch\f1 Space in bytes between bytes in one pointer. For example, when pointer 
\par \tab \hich\af1\dbch\af31505\loch\f1 value is in operands of two commands.
\par \hich\af1\dbch\af31505\loch\f1 ptSNESlorom:
\par \tab \hich\af1\dbch\af31505\loch\f1 For SNES LoROM images\hich\af1\dbch\af31505\loch\f1  proper pointer recalculation.
\par \hich\af1\dbch\af31505\loch\f1 ptAutoPtrStart:
\par \tab \hich\af1\dbch\af31505\loch\f1 ptReference = PointerTableOffset; No need to fill ptReference. 
\par \hich\af1\dbch\af31505\loch\f1 ptAutoReference:
\par \tab \hich\af1\dbch\af31505\loch\f1 stringOffset[i] = ptReference + Pointer[i].value + Pointer[i].offset; 
\par \hich\af1\dbch\af31505\loch\f1 ptPtrtoPtr:
\par \tab \hich\af1\dbch\af31505\loch\f1 Pointer to pointer to string.
\par \hich\af1\dbch\af31505\loch\f1 ptSeekSame:
\par \tab \hich\af1\dbch\af31505\loch\f1 During insertion, same strings will have the same pointer. 
\par \tab \hich\af1\dbch\af31505\loch\f1 No redundancy in text space.
\par \hich\af1\dbch\af31505\loch\f1 ptNotInSource:
\par \tab \hich\af1\dbch\af31505\loch\f1 Specifies group of strings, which was not previously in original ROM 
\par \tab \hich\af1\dbch\af31505\loch\f1 (added by translator)
\par 
\par \hich\af1\dbch\af31505\loch\f1 Right mouse button click on corresponding List gives you opportunity to select
\par \hich\af1\dbch\af31505\loch\f1 Fix pointers positon:
\par \tab \hich\af1\dbch\af31505\loch\f1 If you have changed pointer scheme somehow (for instance, ptDestPtrSize 
\par \tab \hich\af1\dbch\af31505\loch\f1 became 4 because text volume has increased), this recalculates pointer 
\par \tab \hich\af1\dbch\af31505\loch\f1 positio\hich\af1\dbch\af31505\loch\f1 n for a new scheme.
\par \hich\af1\dbch\af31505\loch\f1 Reset TBL links:
\par \tab \hich\af1\dbch\af31505\loch\f1 Resets table links for all strings in group.
\par \hich\af1\dbch\af31505\loch\f1 Near-Pointer Variables:
\par \tab \hich\af1\dbch\af31505\loch\f1 This data can be represented as variables near pointers. 
\par \tab \hich\af1\dbch\af31505\loch\f1 The size is specified in ptInterval.
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 3. Kruptar plugins.
\par \hich\af1\dbch\af31505\loch\f1 Using described above options \hich\af1\dbch\af31505\loch\f1 
you can easily edit almost any plain script just with standard Kruptar. As Kruptar (naturally) does not provide interface for pointers modification, there are two cases when you want to write a plugin for Kruptar:
\par \hich\af1\dbch\af31505\loch\f1 1. Some script features, like unencoded bl\hich\af1\dbch\af31505\loch\f1 
ocks of binary data inside script's body or some optimizations when you just want text to look perfectly plain without raw special symbols inside script.
\par \hich\af1\dbch\af31505\loch\f1 2. Any text compression, while pointers are still stored in a plain way without bit packing or modific\hich\af1\dbch\af31505\loch\f1 ation in a structure.
\par \hich\af1\dbch\af31505\loch\f1 Any other cases are feasible within Kruptar, for instance:
\par \hich\af1\dbch\af31505\loch\f1 a) NES Battletoads - script is compressed with Huffman and pointer value stores bit position in the stream, to start unpacking with. You can specify one pointer-to-pointer tab\hich\af1\dbch\af31505\loch\f1 
le, which will be passed to plugin. Process pointer table in Kruptar and add pass appropriate amount of unpacked strings to Kruptar. On insertion phase you should then recalculate pointers in plugin, pack start bits in them and write text and pointers via
\hich\af1\dbch\af31505\loch\f1  \hich\af1\dbch\af31505\loch\f1 plugin.
\par \hich\af1\dbch\af31505\loch\f1 b) Wii Metroid Prime - script elements with pointers are compressed with LZO. You can pass one pointer to packed stream in your plugin, unpack, add strings to Kruptar and pack everything back via plugin.
\par \hich\af1\dbch\af31505\loch\f1 Still it would be more natural to write sepa\hich\af1\dbch\af31505\loch\f1 rate application only for decompression/unpacking, and edit unpacked file in turn with Kruptar.
\par \hich\af1\dbch\af31505\loch\f1 Next, I will describe few coding examples for effective plugin.
\par 
\par \hich\af1\dbch\af31505\loch\f1 3.1 Compilation and debug
\par \hich\af1\dbch\af31505\loch\f1 Kruptar uses plugins even in general plaintext cases. Default plugin \hich\af1\dbch\af31505\loch\f1 
is Standard.kpl - gets offset to the string, searches for a line terminator and copies one string to Kruptar's buffer. Plugin is just a compiled dll, of course. Natively it should be created with Delphi. For some examples of Delphi plugin coding you can c
\hich\af1\dbch\af31505\loch\f1 h\hich\af1\dbch\af31505\loch\f1 
eck this. Delphi - is the commercial proprietary IDE and Kruptar is written in it. That will be the issue: Kruptar uses 'sharemem' unit for memory share with it's plugins. Even dlls, compiled with Free Pascal are not compatible with Kruptar, as Delphi str
\hich\af1\dbch\af31505\loch\f1 i\hich\af1\dbch\af31505\loch\f1 ng has to be managed by the Delphi runtime. In addition, Delphi uses Object Pascal dialect, which means, we have to rewrite in Pascal open-source C code for compression process, for instance.

\par \hich\af1\dbch\af31505\loch\f1 Our target - is to create fully functional GCC compiled Kruptar \hich\af1\dbch\af31505\loch\f1 
plugin. And here is the plan: we'll compile an adapter plugin in Delphi, which will transmit data between our gcc dll and Kruptar. This adapter is named 'c_plugin.kpl', it can be found in zip archive below this section and should be placed in Kruptar's Li
\hich\af1\dbch\af31505\loch\f1 b\hich\af1\dbch\af31505\loch\f1 
 directory. At Kurptar's load, plugin asks for a path to dll, we created with gcc. During project creation, c_plugin.kpl is specified in grPlugin and extraction/insertion is committed now via our code.
\par \hich\af1\dbch\af31505\loch\f1 It is time to open up code for our examples here or he\hich\af1\dbch\af31505\loch\f1 re.
\par \hich\af1\dbch\af31505\loch\f1 All examples can be compiled with MinGW. Setting up environment, gcc and gdb usage is beyond this document's scope. I will just explain few tricks.
\par \hich\af1\dbch\af31505\loch\f1 In Makefile you can find: $(CC) $(CFLAGS) -shared -o $(TARGET).dll $(TARGET).o -Wl,--kill-at
\par \hich\af1\dbch\af31505\loch\f1 
"--kill-at" is a must for any Delphi host application because of function decorations. Otherwise, mandatory functions, like "GetEncodeSize" will be decorated to "GetEncodeSize@4" by compiler and c_plugin.kpl will not accept your plugin dll.
\par \hich\af1\dbch\af31505\loch\f1 "-shared" is ne\hich\af1\dbch\af31505\loch\f1 eded for every dll, of course.
\par \hich\af1\dbch\af31505\loch\f1 For debug, I prefer to use standard gdb attaching to host application, as Kruptar is not open source anyway:
\par 
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 gdb gcc_dll.dll
\par 
\par \hich\af1\dbch\af31505\loch\f1 Reading symbols from d:\\Kruptar\\C_plugin\\gcc_dll.dll...done.
\par \hich\af1\dbch\af31505\loch\f1 (gdb) attach 3536//that's current P\hich\af1\dbch\af31505\loch\f1 ID for Kruptar
\par \hich\af1\dbch\af31505\loch\f1 Attaching to program `d:\\Kruptar\\C_plugin\\gcc_dll.dll', process 3536
\par \hich\af1\dbch\af31505\loch\f1 [New Thread 3536.0xfa0]
\par ...
\par \hich\af1\dbch\af31505\loch\f1 [New Thread 3536.0x6f8]
\par \hich\af1\dbch\af31505\loch\f1 (gdb) b GetEncodeSize@4//you have to specify function name with decoration, 
\par \hich\af1\dbch\af31505\loch\f1 //as gdb uses compiler-decorated symbols fr\hich\af1\dbch\af31505\loch\f1 om debug dll.
\par \hich\af1\dbch\af31505\loch\f1 //But you can just autocomplete function name by TAB in gdb
\par \hich\af1\dbch\af31505\loch\f1 Breakpoint 1 at 0x6190130b: file gcc_dll.c, line 41.
\par \hich\af1\dbch\af31505\loch\f1 (gdb) c
\par \hich\af1\dbch\af31505\loch\f1 Continuing.
\par \hich\af1\dbch\af31505\loch\f1 [Switching to Thread 3536.0xfa0]
\par 
\par \hich\af1\dbch\af31505\loch\f1 //here I add 1 pointer to group in Kruptar and fall in breakpoint
\par 
\par \hich\af1\dbch\af31505\loch\f1 Breakpoi\hich\af1\dbch\af31505\loch\f1 nt 1, GetEncodeSize@4 (data=0x12f6dc) at gcc_dll.c:41
\par \hich\af1\dbch\af31505\loch\f1 41      int stringsCount =  data->tStringsCount();//tStringsCount is inside c_plugin.kpl
\par \hich\af1\dbch\af31505\loch\f1 (gdb) n
\par \hich\af1\dbch\af31505\loch\f1 0x02184348 in ?? () from D:\\Kruptar\\Kruptar\\Lib\\c_plugin.kpl//wut?!
\par \hich\af1\dbch\af31505\loch\f1 (gdb) si
\par \hich\af1\dbch\af31505\loch\f1 0x0218434d in ?? () from D:\\\hich\af1\dbch\af31505\loch\f1 Kruptar\\Kruptar\\Lib\\c_plugin.kpl//continue trying or we could use 'finish' command
\par \hich\af1\dbch\af31505\loch\f1 (gdb)
\par \hich\af1\dbch\af31505\loch\f1 0x02184350 in ?? () from D:\\Kruptar\\Kruptar\\Lib\\c_plugin.kpl
\par \hich\af1\dbch\af31505\loch\f1 (gdb)
\par \hich\af1\dbch\af31505\loch\f1 0x61901313 in GetEncodeSize@4 (data=0x12f6dc) at gcc_dll.c:41
\par \hich\af1\dbch\af31505\loch\f1 41      int stringsCount =  data->tStr\hich\af1\dbch\af31505\loch\f1 ingsCount();//we're back in our dll
\par ...
\par 
\par 
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 3.2 Mandatory functions and PluginData.
\par 
\par \hich\af1\dbch\af31505\loch\f1 Interface for c_plugin.kpl is placed in gcc_dll.h and used by all C plugins:
\par \hich\af1\dbch\af31505\loch\f1 Structure tPluginData is used to pass all necessary data between Kruptar and C plugin.
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 typed\hich\af1\dbch\af31505\loch\f1 ef struct __attribute__((__packed__))\{
\par \hich\af1\dbch\af31505\loch\f1     void *rom;//ROM is copied entirely to dynamic memory by Kruptar, so plugin can work with all ROM contents
\par \tab \hich\af1\dbch\af31505\loch\f1 long int romSize;
\par \tab \hich\af1\dbch\af31505\loch\f1 long int param;//contains ptStringLength in case your text is fixed string
\par \tab \hich\af1\dbch\af31505\loch\f1 long int ch\hich\af1\dbch\af31505\loch\f1 arSize;
\par \tab 
\par \tab \hich\af1\dbch\af31505\loch\f1 int (__stdcall *tStringAdd)(char *str, long int size);//Adds processed strings from plugin buffer to Kruptar during extraction
\par \tab \hich\af1\dbch\af31505\loch\f1 void (__stdcall *tStringSet)(int index, char *str, long int size);//Sets Kruptar strings at given index with bytes fr\hich\af1\dbch\af31505\loch\f1 om str
\par \tab \hich\af1\dbch\af31505\loch\f1 char* (__stdcall *tStringGet)(int index, long int* size);//Gets strings to plugin buffer for processing during insertion time
\par \tab \hich\af1\dbch\af31505\loch\f1 //One pointer can have more than one string in Kruptar. String number is specified by index
\par \tab \hich\af1\dbch\af31505\loch\f1  
\par \tab \hich\af1\dbch\af31505\loch\f1 long int (__stdcall *tStringsCount)();\tab 
\par \tab \hich\af1\dbch\af31505\loch\f1 long int originalStringSize;//used if it's necessary to return original size of string in ROM
\par \hich\af1\dbch\af31505\loch\f1    
\par \}\hich\af1\dbch\af31505\loch\f1 tPluginData; 
\par 
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 All C plugin dlls must have 3 functions:
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 void Decode (tPluginData *data, long int offset);
\par \hich\af1\dbch\af31505\loch\f1 /*
\par \hich\af1\dbch\af31505\loch\f1 Dec\hich\af1\dbch\af31505\loch\f1 odes/uncompresses string from ROM. 
\par \hich\af1\dbch\af31505\loch\f1 offset (in ROM) is calculated by Kruptar, using pointer value
\par \hich\af1\dbch\af31505\loch\f1 */
\par 
\par \hich\af1\dbch\af31505\loch\f1 long int GetEncodeSize (tPluginData *data);
\par \hich\af1\dbch\af31505\loch\f1 /*
\par \hich\af1\dbch\af31505\loch\f1 Returns size of compressed/encoded string
\par \hich\af1\dbch\af31505\loch\f1 c_plugin.kpl has to call first GetEncodeSize to allocate buffer i\hich\af1\dbch\af31505\loch\f1 n dynamic memory and then Encode for filling this buffer.
\par \hich\af1\dbch\af31505\loch\f1 Not very convenient, so I will fill inner global buffer with encoded string right in GetEncodeSize and then,
\par \hich\af1\dbch\af31505\loch\f1 at Encode phase, just copy buffer to Kruptar's one.
\par \hich\af1\dbch\af31505\loch\f1 Pointers will also be recalculated ba\hich\af1\dbch\af31505\loch\f1 sed on GetEncodeSize returned value.
\par \hich\af1\dbch\af31505\loch\f1 */\tab 
\par 
\par \hich\af1\dbch\af31505\loch\f1 void Encode (tPluginData *data, void *buffer);
\par \hich\af1\dbch\af31505\loch\f1 /*
\par \hich\af1\dbch\af31505\loch\f1 Fills Kruptar's buffer with encoded string, 
\par \hich\af1\dbch\af31505\loch\f1 which will be inserted in ROM file by Kruptar at proper address.
\par \hich\af1\dbch\af31505\loch\f1 */
\par 
\par 
\par 
\par \hich\af1\dbch\af31505\loch\f1 3.3 Examples
\par 
\par \hich\af1\dbch\af31505\loch\f1 3.3.1. Sample
\par \hich\af1\dbch\af31505\loch\f1 For starters, I will make a simple project for binary file with ASCII encoding, filled with 1-byte pointers and two NULL-terminated strings.
\par \hich\af1\dbch\af31505\loch\f1 Whole Decode code is mainly dynamic array realization in C - I set up a source pointer to ROM + string offset and k\hich\af1\dbch\af31505\loch\f1 eep copying bytes to my str[] untill I find '\\00' terminator.
\par \hich\af1\dbch\af31505\loch\f1 At the end I do tStringAdd(str,strlen(str)) and my str gets copied to Kruptar's memory.
\par 
\par \hich\af1\dbch\af31505\loch\f1 GetEncodeSize first gets string from Kruptar by data->tStringGet(index, pStrSize). tStringGet returns NUL\hich\af1\dbch\af31505\loch\f1 
L if there are no more strings at given index, assigned to current pointer, so I loop through all indexes. Inside I realloc global for my dll output buffer to fit another string and copy whole string to buffer, also calculating global encodeSize.
\par 
\par \hich\af1\dbch\af31505\loch\f1 By the t\hich\af1\dbch\af31505\loch\f1 
ime Encode is executed, I have already filled outBuffer and it is still stored in dynamic memory. Moreover, Kruptar has already allocated memory for output buffer at size, returned by GetEncodeSize. So I just make memcpy(buffer, outBuffer, encodeSize) and
\hich\af1\dbch\af31505\loch\f1  \hich\af1\dbch\af31505\loch\f1 Kruptar pastes this buffer at the right place in ROM.
\par \hich\af1\dbch\af31505\loch\f1 Kpx project is self-evident and you can learn everything just watching what options have been set in it.
\par 
\par \hich\af1\dbch\af31505\loch\f1 3.3.2. Standard
\par \hich\af1\dbch\af31505\loch\f1 That will be the absolute analog for Standard.kpl, written in C. As an example I\hich\af1\dbch\af31505\loch\f1 
 have took NES Final Fantasy, which actually uses DTE. Do not worry; the DTE itself will be handled by Kruptar's table support feature. All plugin needs to pass is byte string, which will be then decoded by Kruptar.
\par \hich\af1\dbch\af31505\loch\f1 And yes, I've tricked you a little: code\hich\af1\dbch\af31505\loch\f1 
 wise standard plugin is absolutely the same as sample one. No surprise here: you still have to look through rom for an end of string, copying bytes until then. In Encode phase, Kruptar will find optimum code for DTE entry and return byte, which our plugi
\hich\af1\dbch\af31505\loch\f1 n\hich\af1\dbch\af31505\loch\f1  will copy to output buffer. I have included that in archive for the sake of Final Fantasy kpx file,
\par 
\par \hich\af1\dbch\af31505\loch\f1 3.3.3. Heimdall
\par \hich\af1\dbch\af31505\loch\f1 Sega CD Heimdall game uses sort of advanced script format with some binary data in it. For example, first byte of some strings is '\\00', a\hich\af1\dbch\af31505\loch\f1 
nd strings are NULL-terminated, which means with our previous code some of the strings will not be added to Kruptar. We will have to just copy first byte of the string and search for line termiator in rest part at Decode phase:
\par \hich\af1\dbch\af31505\loch\f1 data->tStringAdd(str, size);
\par \hich\af1\dbch\af31505\loch\f1 not strlen(str), as we had in previous examples, because C's strlen will also take string length up to 1st '\\00' symbol, which means string, which starts from '\\
00' will have length 0 and will not be fully added to Kruptar.
\par \hich\af1\dbch\af31505\loch\f1 You can check contents of kpx file for detailed information of script structure.
\par 
\par \hich\af1\dbch\af31505\loch\f1 3.3.4 Snake's Revenge
\par \hich\af1\dbch\af31505\loch\f1 Good old 6-bit encoding for text - Kruptar plugin is intended for such things. It was pretty well described in my previous document for Kruptar's plugin\hich\af1\dbch\af31505\loch\f1 
s coding in Delphi, and here I just rewrote this code into C and compiled in plugin ("-s" compiled dll is 3 times smaller than Delphi's kpx). You can also check code details in foresaid sources. I have also included kpx file for script structure understan
\hich\af1\dbch\af31505\loch\f1 d\hich\af1\dbch\af31505\loch\f1 ing.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11668938 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b03041400060008000000210030dd4329a8060000a41b0000160000007468656d652f7468656d652f
7468656d65312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87
615b8116d8a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad
79482a9c0498f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b
5d8a314d3c94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab
999fb7b4717509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9
699640f6719e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd586
8b37a088d1e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d6
0cf03ac1a5193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f
9e7ef3f2d117d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be
15c308d3f28acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a9979
3849c26ae66252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d
32a423279a668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2a
f074481847bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86
e877f0034e16bafb0e258ebb4faf06b769e888340b103d331115bebc4eb813bf83291b63624a0d1475a756c734f9bbc2cd28546ecbe1e20a3794ca175f3fae90
fb6d2dd99bb07b55e5ccf68942bd0877b23c77b908e8db5f9db7f024d9239010f35bd4bbe2fcae387bfff9e2bc289f2fbe24cfaa301468dd8bd846dbb4ddf1c2
ae7b4c191ba8292337a469bc25ec3d411f06f53a73e224c5292c8de0516732307070a1c0660d125c7d44553488700a4d7bddd3444299910e254ab984c3a219ae
a4adf1d0f82b7bd46cea4388ad1c12ab5d1ed8e1153d9c9f350a3246aad01c6873462b9ac05999ad5cc988826eafc3acae853a33b7ba11cd1445875ba1b236b1
399483c90bd560b0b0263435085a21b0f22a9cf9356b38ec6046026d77eba3dc2dc60b17e92219e180643ed27acffba86e9c94c7ca9c225a0f1b0cfae0788ad5
4adc5a9aec1b703b8b93caec1a0bd8e5de7b132fe5113cf312503b998e2c2927274bd051db6b35979b1ef271daf6c6704e86c73805af4bdd476216c26593af84
0dfb5393d964f9cc9bad5c313709ea70f561ed3ea7b053075221d51696910d0d339585004b34272bff7213cc7a510a5454a3b349b1b206c1f0af490176745d4b
c663e2abb2b34b23da76f6352ba57ca2881844c1111ab189d8c7e07e1daaa04f40255c77988aa05fe06e4e5bdb4cb9c5394bbaf28d98c1d971ccd20867e556a7
689ec9166e0a522183792b8907ba55ca6e943bbf2a26e52f48957218ffcf54d1fb09dc3eac04da033e5c0d0b8c74a6b43d2e54c4a10aa511f5fb021a07533b20
5ae07e17a621a8e082dafc17e450ffb739676998b48643a4daa7211214f623150942f6a02c99e83b85583ddbbb2c4996113211551257a656ec1139246ca86be0
aadedb3d1441a89b6a929501833b197fee7b9641a3503739e57c732a59b1f7da1cf8a73b1f9bcca0945b874d4393dbbf10b1680f66bbaa5d6f96e77b6f59113d
316bb31a795600b3d256d0cad2fe354538e7566b2bd69cc6cbcd5c38f0e2bcc63058344429dc2121fd07f63f2a7c66bf76e80d75c8f7a1b622f878a18941d840
545fb28d07d205d20e8ea071b283369834296bdaac75d256cb37eb0bee740bbe278cad253b8bbfcf69eca23973d939b97891c6ce2cecd8da8e2d343578f6648a
c2d0383fc818c798cf64e52f597c740f1cbd05df0c264c49134cf09d4a60e8a107260f20f92d47b374e32f000000ffff0300504b030414000600080000002100
0dd1909fb60000001b010000270000007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f7
8277086f6fd3ba109126dd88d0add40384e4350d363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89
d93b64b060828e6f37ed1567914b284d262452282e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd500
1996509affb3fd381a89672f1f165dfe514173d9850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0f
bfff0000001c0200001300000000000000000000000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6
a7e7c0000000360100000b00000000000000000000000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a
0000001c00000000000000000000000000190200007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d00140006000800000021
0030dd4329a8060000a41b00001600000000000000000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d001400060008
00000021000dd1909fb60000001b0100002700000000000000000000000000b20900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000ad0a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;
\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;\lsdpriority39 \lsdlocked0 toc 7;
\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdpriority1 \lsdlocked0 Default Paragraph Font;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdunhideused0 \lsdlocked0 Revision;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e5000000000000000000000000c0d9
b51c0163ce01feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}